#!/usr/sbin/nft -f

define main_if = wlp2s0

define local_subnets = { 192.168.0.0/16, 10.0.0.0/8, 172.16.0.0/12 }
define multicast_subnet = 224.0.0.0/24
define ip_link_local_subnet = 169.254.0.0/16
define ip6_link_local_subnet = fe80::/10

define ssh_port = 900


table ip filter {
    set temp_udp_ports {
      type inet_service
    }

    set temp_tcp_ports {
      type inet_service
    }

	chain INPUT {
		type filter hook input priority filter; policy drop;

        counter jump main_input comment "Jump to main_input rules"
        counter
	}

	chain FORWARD {
		type filter hook forward priority filter; policy drop;
        counter
	}

	chain OUTPUT {
		type filter hook output priority filter; policy accept;

        counter jump main_output comment "Jump to main_output"
        counter
	}

    chain main_input {
        ct state invalid counter drop comment \
            "Early drop of invalid packets"
        ct state {established, related} counter accept comment \
            "Accept all established/related connections made by us"

        iifname lo counter accept comment "Accept inbound on loopback"

        # Drop inbound connections to loopback
        iifname != lo ip daddr 127.0.0.1/8 counter drop comment \
            "Drop inbound connections to loopback not coming from loopback"

        # Allow SSH connections
        ct state new iifname $main_if tcp dport $ssh_port counter accept comment \
            "Allow inbound new SSH connections"

        # Allow temp ports
        ct state new iifname $main_if tcp dport @temp_udp_ports counter accept comment \
            "Allow new inbound connections from udp ports temporarily"
        ct state new iifname $main_if udp dport @temp_tcp_ports counter accept comment \
            "Allow new inbound connections from tcp ports temporarily"
    }

    chain main_output {
        oifname lo counter accept comment "Accept outbound on loopback"

        # Allow outbound connections on local subnets on $main_if
        oifname $main_if ip daddr $local_subnets counter accept comment \
            "Allow outbound connections to local subnet through $main_if"
        oifname $main_if ip daddr $multicast_subnet counter accept comment \
            "Allow outbound connections to reserved multicast IPs on $main_if"
        oifname $main_if ip daddr $ip_link_local_subnet counter accept comment \
            "Allow outbound connections on local-link IPv4s on $main_if"
    }
}

table ip6 filter {
    set temp_udp_ports {
      type inet_service
    }

    set temp_tcp_ports {
      type inet_service
    }

	chain INPUT {
		type filter hook input priority filter; policy drop;

        counter jump main_input comment "Jump to main_input rules"
        counter
	}

	chain FORWARD {
		type filter hook forward priority filter; policy drop;
        counter
	}

	chain OUTPUT {
		type filter hook output priority filter; policy accept;

        counter jump main_output comment "Jump to main_output"
        counter
	}

    chain main_input {
        ct state invalid counter drop comment \
            "Early drop of invalid packets"
        ct state {established, related} counter accept comment \
            "Accept all established/related connections made by us"

        iifname lo counter accept comment "Accept inbound on loopback"

        # Drop inbound connections to loopback
        iifname != lo ip6 daddr ::1/128 counter drop comment \
            "Drop connections to loopback not coming from loopback"

        # Allow SSH connections
        ct state new iifname $main_if tcp dport $ssh_port counter accept comment \
            "Allow inbound new SSH connections"

        # Allow temp ports
        ct state new iifname $main_if tcp dport @temp_udp_ports counter accept comment \
            "Allow new inbound connections from udp ports temporarily"
        ct state new iifname $main_if udp dport @temp_tcp_ports counter accept comment \
            "Allow new inbound connections from tcp ports temporarily"
    }

    chain main_output {
        oifname lo counter accept comment "Accept outbound on loopback"

        # Allow outbound connections on local subnets on $main_if
        oifname $main_if ip6 daddr $ip6_link_local_subnet counter accept comment \
            "Allow outbound connections on local-link IPv6s on $main_if"
    }
}
